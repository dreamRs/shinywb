% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/WinBox.R
\name{WinBox}
\alias{WinBox}
\alias{closeWinBox}
\title{WinBox}
\usage{
WinBox(
  title,
  ui,
  options = wbOptions(),
  controls = wbControls(),
  id = NULL,
  padding = "0 10px",
  session = shiny::getDefaultReactiveDomain()
)

closeWinBox(id, session = shiny::getDefaultReactiveDomain())
}
\arguments{
\item{title}{Title for the window.}

\item{ui}{Content of the window.}

\item{options}{List of options, see \code{\link[=wbOptions]{wbOptions()}}.}

\item{controls}{List of controls, see \code{\link[=wbControls]{wbControls()}}.}

\item{id}{An unique identifier for the window.}

\item{padding}{Padding for the window content.}

\item{session}{Shiny session.}
}
\value{
No value.
}
\description{
A window manager with JavaScript library \href{https://nextapps-de.github.io/winbox/}{WinBox.js}.
}
\examples{

library(shiny)
library(shinywb)

ui <- fluidPage(
  html_dependency_winbox(),
  actionButton(inputId = "show", label = "Show WinBox"),
  verbatimTextOutput("res")
)

server <- function(input, output, session) {

  observeEvent(input$show, {
    WinBox(
      title = "WinBox window",
      ui = tagList(
        tags$h2("Hello from WinBox!"),
        "Text content of winbox.",
        selectInput("month", "Select a month:", month.name)
      )
    )
  })

  output$res <- renderPrint(input$month)

}

if (interactive())
  shinyApp(ui, server)
}
