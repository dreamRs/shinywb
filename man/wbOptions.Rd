% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/WinBox.R
\name{wbOptions}
\alias{wbOptions}
\title{WinBox Options}
\usage{
wbOptions(
  width = NULL,
  height = NULL,
  minwidth = NULL,
  minheight = NULL,
  x = NULL,
  y = NULL,
  max = NULL,
  top = NULL,
  right = NULL,
  bottom = NULL,
  left = NULL,
  background = NULL,
  border = NULL
)
}
\arguments{
\item{width, height}{Set the initial width/height of the window (supports units "px" and "\%").}

\item{minwidth, minheight}{Set the minimal width/height of the window (supports units "px" and "\%").}

\item{x, y}{Set the initial position of the window (supports: "right" for x-axis, "bottom" for y-axis,
"center" for both, units "px" and "\%" for both).}

\item{max}{Automatically toggles the window into maximized state when created.}

\item{top, right, bottom, left}{Set or limit the viewport of the window's available area (supports units "px" and "\%").}

\item{background}{Set the background of the window (supports all CSS styles which are also supported by the style-attribute "background",
e.g. colors, transparent colors, hsl, gradients, background images).}

\item{border}{Set the border width of the window (supports all css units, like px, \%, em, rem, vh, vmax).}
}
\value{
A \code{list} of options to use in \code{\link[=WinBox]{WinBox()}}.
}
\description{
WinBox Options
}
\examples{

library(shiny)

ui <- fluidPage(
  tags$style("body {min-height: 100vh;}"),
  html_dependency_winbox(),
  actionButton(inputId = "show", label = "Show WinBox")
)

server <- function(input, output, session) {

  observeEvent(input$show, {
    WinBox(
      title = "Custom background color and border",
      ui = tags$div(
        style = "padding: 10px;",
        tags$h2("Hello from WinBox!"),
        "Text content of winbox."
      ),
      options = wbOptions(
        background = "#112446", 
        border = "0.5em",
        x = "center",
        y = "center",
        width = "50\%",
        height = "50\%"
      )
    )
  })

  output$res <- renderPrint(input$month)

}

if (interactive())
  shinyApp(ui, server)
}
